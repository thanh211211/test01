// <autogenerated /> 
using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
//using Steeltoe.Extensions.Configuration.CloudFoundry;
//using Steeltoe.Extensions.Logging.SerilogDynamicLogger;
//using Steeltoe.Extensions.Configuration.Placeholder;
//using Serilog;
using System;

namespace Halliburton.App
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var host = CreateWebHostBuilder(args).Build();

            host.Run();
        }

        public static IWebHostBuilder CreateWebHostBuilder(string[] args)
        {
            var builder = WebHost.CreateDefaultBuilder(args)
                //.UseKestrel()
                //.UseCloudFoundryHosting()
                .UseDefaultServiceProvider(configure => configure.ValidateScopes = false)
                .UseStartup<Startup>();
                //.UseSerilog((hostingContext, loggerConfiguration) => loggerConfiguration
                //    .ReadFrom.Configuration(hostingContext.Configuration));

            builder.ConfigureAppConfiguration((builderContext, config) =>
            {
                config.SetBasePath(builderContext.HostingEnvironment.ContentRootPath)
                    .AddCommandLine(args)
                    .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
                    .AddJsonFile($"appsettings.{builderContext.HostingEnvironment.EnvironmentName}.json", optional: true)
                    .AddEnvironmentVariables();
            });

            builder.ConfigureLogging((builderContext, loggingBuilder) => {

                loggingBuilder.AddConfiguration(builderContext.Configuration.GetSection("Logging"));
                loggingBuilder.AddDebug();

            });

            return builder;
        }
    }
}